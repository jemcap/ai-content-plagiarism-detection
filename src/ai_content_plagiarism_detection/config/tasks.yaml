text_analyzer:
  description: >
    Execute comprehensive multi-layered linguistic analysis of the input text using advanced 
    natural language processing techniques. Perform sophisticated text decomposition through 
    sentence boundary detection, paragraph cohesion analysis, and topic modeling to create 
    semantically meaningful segments. Extract and catalog key phrases, terminology clusters, 
    domain-specific vocabulary, and semantic themes using latent semantic analysis and word 
    embedding techniques. Conduct detailed writing pattern analysis including syntactic parsing, 
    sentence complexity assessment, and identification of unique linguistic expressions and 
    author-specific stylistic markers. Apply comprehensive text preprocessing including 
    tokenization, lemmatization, named entity recognition, and part-of-speech tagging. Generate 
    structured text chunks optimized for similarity detection with overlapping n-grams, semantic 
    embeddings, and contextual vectors. Produce detailed metadata profiles including word 
    frequency distributions, readability metrics, lexical diversity scores, and linguistic 
    fingerprinting parameters for precise similarity matching.
  expected_output: >
    A comprehensive JSON structure containing: (1) Segmented text chunks with semantic boundaries 
    and overlapping n-grams, (2) Extracted key phrases and terminology clusters with relevance 
    scores, (3) Identified semantic themes with topic modeling results, (4) Detailed linguistic 
    fingerprint including syntactic patterns, stylistic markers, and writing complexity metrics, 
    (5) Comprehensive metadata profile with word frequency distributions, readability scores 
    (Flesch-Kincaid, Gunning Fog, SMOG), lexical diversity indices, average sentence length, 
    vocabulary richness measures, (6) Named entities and domain-specific terminology with 
    classifications, (7) Contextual embeddings and semantic vectors for each text segment, 
    (8) Structural analysis including paragraph cohesion scores and thematic transitions.
  agent: text_analyzer_agent
  output_file: output/text_segments.json

similarity_checker:
  description: >
    Conduct thorough similarity detection across online repositories to identify potential 
    plagiarism. For each analyzed text segment, you must find and document the exact source 
    URL where similar content appears. It is critical that every flagged piece of content is 
    explicitly linked to its specific source URL - this direct mapping between content and 
    source is essential. Use exact phrase matching, semantic similarity scoring, and 
    paraphrasing detection techniques. Generate similarity reports with precise percentage 
    matches for each detected segment, always including the complete and accurate source URL 
    for each match. For every potential match found, document the exact text segment from the 
    input document, the matching text from the source, the specific URL where it was found, 
    and the similarity percentage. Organize these findings in a clear tabular format to ensure 
    direct traceability between each flagged segment and its source.
  expected_output: >
    A focused markdown report containing: (1) Brief executive summary with overall similarity 
    percentage, (2) A clear content-to-source mapping table with four columns: "Text from Document", 
    "Matching Source Text", "Source URL", and "Similarity Percentage", (3) For each detected 
    instance, the exact text from the uploaded document that was flagged as potentially plagiarized, 
    (4) The matching text found at the source, (5) The complete and specific URL where each match 
    was found (ensuring direct traceability), (6) The calculated similarity percentage for each 
    text segment match, (7) A simple list of all source URLs referenced in the report.
  context:
    - text_analyzer
  agent: similarity_checker_agent
  output_file: output/similarity_report.md

content_improvement:
  description: >
    Analyze comprehensive similarity reports and develop strategic, multi-faceted recommendations 
    for content enhancement and originality restoration. Provide detailed, actionable guidance 
    for rephrasing problematic sections while preserving core message, intent, and academic rigor. 
    Develop sophisticated rewriting strategies addressing different similarity types including 
    direct copying, close paraphrasing, structural mimicking, and conceptual overlap. Create 
    targeted improvement recommendations including sentence-level restructuring, vocabulary 
    diversification, argument reorganization, and narrative flow enhancement. Suggest alternative 
    phrasing options, synonyms, and linguistic variations while maintaining technical accuracy 
    and domain-specific terminology. Provide guidance on proper citation integration, quotation 
    usage, and attribution strategies. Develop comprehensive content enhancement plans including 
    structural improvements, rhetorical strengthening, clarity optimization, and originality 
    enhancement techniques. Offer specific before-and-after transformation examples and creative 
    approaches to presenting similar ideas uniquely while maintaining audience engagement and 
    academic standards.
  expected_output: >
    A detailed JSON document containing: (1) Strategic improvement roadmap with prioritized 
    action items and implementation timeline, (2) Section-by-section rewriting recommendations 
    with specific alternative phrasings and structural modifications, (3) Vocabulary enhancement 
    suggestions including synonym alternatives and technical term replacements, (4) Citation 
    integration strategies with proper attribution formats and quotation guidelines, (5) 
    Before-and-after transformation examples demonstrating originality enhancement techniques, 
    (6) Structural reorganization proposals including argument flow improvements and narrative 
    restructuring, (7) Quality assurance metrics and improvement tracking indicators, (8) 
    Risk mitigation strategies for high-similarity content areas, (9) Creative expression 
    alternatives for presenting similar concepts uniquely, (10) Academic integrity compliance 
    checklist with institutional policy alignment, (11) Audience engagement optimization 
    recommendations, (12) Technical accuracy validation guidelines for domain-specific content.
  context:
    - similarity_checker
  agent: content_improvement_agent

plagiarism_report:
  description: >
    Create a clear, straightforward plagiarism assessment report that focuses on practical, 
    actionable information. The report must include a simple executive summary with an overall 
    plagiarism score and key findings. Most importantly, for every detected instance of potential 
    plagiarism, provide a direct mapping between the specific content and its exact source URL. 
    
    Each flagged text segment must be explicitly linked to its corresponding source, showing:
    1) The exact text that was flagged
    2) The precise URL where this content was found
    3) The similarity percentage for this specific match
    
    Present this information in a clear, tabular format that makes it easy to see which parts 
    of the document need attention and where the similar content originated from. Include basic 
    recommendations for addressing each flagged section. Keep the language accessible and 
    straightforward, avoiding unnecessary jargon or overly complex explanations.
  expected_output: >
    A clear, concise markdown report containing: (1) Executive summary with an overall plagiarism 
    score as a percentage and brief key findings, (2) A content-to-source mapping table with 
    columns for: "Flagged Text", "Source URL", "Similarity Percentage", and "Recommendation", 
    (3) For each flagged segment, the exact text that was detected as potentially plagiarized, 
    (4) The specific and complete URL where each flagged text segment was found, ensuring direct 
    traceability, (5) Simple, actionable recommendations for addressing each instance of potential 
    plagiarism, (6) A brief overall assessment of the document's originality, and (7) A simple 
    bibliography listing all source URLs referenced in the report.
  context:
    - similarity_checker
    - content_improvement
  agent: plagiarism_report_agent
  output_file: output/plagiarism_report.md
